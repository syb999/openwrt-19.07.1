--- a/src/DarkIce.cpp
+++ b/src/DarkIce.cpp
@@ -1184,19 +1184,19 @@ DarkIce :: setRealTimeScheduling ( void
     struct sched_param  param;
 
     /* store the old scheduling parameters */
-    if ( (origSchedPolicy = sched_getscheduler(0)) == -1 ) {
-        throw Exception( __FILE__, __LINE__, "sched_getscheduler", errno);
-    }
-
-    if ( sched_getparam( 0, &param) == -1 ) {
-        throw Exception( __FILE__, __LINE__, "sched_getparam", errno);
-    }
+//    if ( (origSchedPolicy = sched_getscheduler(0)) == -1 ) {
+//        throw Exception( __FILE__, __LINE__, "sched_getscheduler", errno);
+//    }
+
+//    if ( sched_getparam( 0, &param) == -1 ) {
+//       throw Exception( __FILE__, __LINE__, "sched_getparam", errno);
+//    }
     origSchedPriority = param.sched_priority;
 
     /* set SCHED_FIFO with max - 1 priority or user configured value */
-    if ( (high_priority = sched_get_priority_max(SCHED_FIFO)) == -1 ) {
-        throw Exception(__FILE__,__LINE__,"sched_get_priority_max",errno);
-    }
+//    if ( (high_priority = sched_get_priority_max(SCHED_FIFO)) == -1 ) {
+//        throw Exception(__FILE__,__LINE__,"sched_get_priority_max",errno);
+//    }
     reportEvent( 8, "scheduler high priority", high_priority);
 
     if (realTimeSchedPriority > high_priority) {
@@ -1244,15 +1244,15 @@ DarkIce :: setOriginalScheduling ( void
     if ( euid == 0 ) {
         struct sched_param  param;
 
-        if ( sched_getparam( 0, &param) == -1 ) {
-            throw Exception( __FILE__, __LINE__, "sched_getparam", errno);
-        }
+//        if ( sched_getparam( 0, &param) == -1 ) {
+//            throw Exception( __FILE__, __LINE__, "sched_getparam", errno);
+//        }
 
         param.sched_priority = origSchedPriority;
 
-        if ( sched_setscheduler( 0, origSchedPolicy, &param) == -1 ) {
-            throw Exception( __FILE__, __LINE__, "sched_setscheduler", errno);
-        }
+//        if ( sched_setscheduler( 0, origSchedPolicy, &param) == -1 ) {
+//            throw Exception( __FILE__, __LINE__, "sched_setscheduler", errno);
+//        }
 
         reportEvent( 5, "reverted to original scheduling");
     }
