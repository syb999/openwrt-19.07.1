#!/bin/sh
. /usr/ffmpegtool/commonfunc

testdestpath

param_format="$(uci get ffmpegtool.@ffmpegtool[0].audio_format)"
param_rate=""
param_channel=""
param_starttime=""
param_endtime=""
param_tone=""
param_speed=""
param_volume=""
param_title=""
param_copy=""

if [ "$(uci get ffmpegtool.@ffmpegtool[0].sampling_rate)" != "none" ];then
	param_rate="-ar $(uci get ffmpegtool.@ffmpegtool[0].sampling_rate)"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].audio_channel)" != "none" ];then
	param_channel="-ac $(uci get ffmpegtool.@ffmpegtool[0].audio_channel)"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].risingfalling_tone)" != "none" ];then
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].risingfalling_tone)" == "sharp(44100Hz)" ];then
		param_tone="asetrate=44100*2^(1/12),atempo=1/2^(1/12),"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].risingfalling_tone)" == "sharp(22050Hz)" ];then
		param_tone="asetrate=22050*2^(1/12),atempo=1/2^(1/12),"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].risingfalling_tone)" == "rasing whole tone(44100Hz)" ];then
		param_tone="asetrate=44100*2^(2/12),atempo=1/2^(2/12),"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].risingfalling_tone)" == "rasing whole tone(22050Hz)" ];then
		param_tone="asetrate=22050*2^(2/12),atempo=1/2^(1/12),"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].risingfalling_tone)" == "flat(44100Hz)" ];then
		param_tone="asetrate=44100*2^(-1/12),atempo=1/2^(-1/12),"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].risingfalling_tone)" == "flat(22050Hz)" ];then
		param_tone="asetrate=22050*2^(-1/12),atempo=1/2^(1/12),"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].risingfalling_tone)" == "falling whole tone(44100Hz)" ];then
		param_tone="asetrate=44100*2^(-2/12),atempo=1/2^(-2/12),"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].risingfalling_tone)" == "falling whole tone(22050Hz)" ];then
		param_tone="asetrate=22050*2^(-2/12),atempo=1/2^(1/12),"
	fi
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].a_speed_governing)" != "none" ];then
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].a_speed_governing)" == "0.5" ];then
		param_speed="atempo=0.5,"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].a_speed_governing)" == "1.0" ];then
		param_speed="atempo=1.0,"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].a_speed_governing)" == "1.5" ];then
		param_speed="atempo=1.5,"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].a_speed_governing)" == "2.0" ];then
		param_speed="atempo=2.0,"
	fi
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].volume)" != "none" ];then
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].volume)" == "standard" ];then
		param_volume="loudnorm=i=-14:tp=0.0"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].volume)" == "+5dB" ];then
		param_volume="volume=5dB"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].volume)" == "-5dB" ];then
		param_volume="volume=-5dB"
	fi
fi

if [ "$param_tone" == "" -a "$param_speed" == "" -a "$param_volume" == "" ];then
	audios_param="$param_tone$param_speed$param_volume"
else
	audios_param="$(echo $param_tone$param_speed$param_volume | sed 's/,$//')"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].audio_copy)" == "1" ];then
	param_copy="-acodec copy"
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].dest_select)" == "streaming media server" ];then
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "one file" ];then
		while true;do
			srctarget="$(uci get ffmpegtool.@ffmpegtool[0].src_file_path)"
			ffprobe "$srctarget" > /tmp/ffmpeg.log 2>&1
			echo "$srctarget ---- 推流中..." >> /tmp/ffmpeg.log
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "rtmp server" ];then
				ffmpeg -re -i "$srctarget" -vn $param_rate $param_channel $param_copy -f flv "$(uci get ffmpegtool.@ffmpegtool[0].rtmp_server_url)"
			elif [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "icecast server" ];then
				ffmpeg -re -i "$srctarget" -vn $param_rate $param_channel $param_copy -f mp3 "$(uci get ffmpegtool.@ffmpegtool[0].icecast_server_url)"
			fi
		done
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "all files in the directory" ];then
		srctarget="$(ls $(uci get ffmpegtool.@ffmpegtool[0].src_directory_path))"
		while true;do
			for i in $srctarget;do
				ffprobe "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" > /tmp/ffmpeg.log 2>&1
				echo "$i ---- 推流中..." >> /tmp/ffmpeg.log
				if [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "rtmp server" ];then
					ffmpeg -re -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" -vn $param_rate $param_channel $param_copy -f flv "$(uci get ffmpegtool.@ffmpegtool[0].rtmp_server_url)"
				elif [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "icecast server" ];then
					ffmpeg -re -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" -vn $param_rate $param_channel $param_copy -f mp3 "$(uci get ffmpegtool.@ffmpegtool[0].icecast_server_url)"
				fi
			done
		done
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "streaming media" ];then
		while true;do
			srctarget="$(uci get ffmpegtool.@ffmpegtool[0].src_stream_path)"
			ffprobe "$srctarget" > /tmp/ffmpeg.log 2>&1
			echo "$srctarget ---- 推流中..." >> /tmp/ffmpeg.log
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "rtmp server" ];then
				ffmpeg -i "$srctarget" -vn $param_rate $param_channel $param_copy -f flv "$(uci get ffmpegtool.@ffmpegtool[0].rtmp_server_url)"
			elif [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "icecast server" ];then
				ffmpeg -i "$srctarget" -vn $param_rate $param_channel $param_copy -f mp3 "$(uci get ffmpegtool.@ffmpegtool[0].icecast_server_url)"
			fi
		done
	fi
fi

if [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "one file" ];then
	srctarget="$(uci get ffmpegtool.@ffmpegtool[0].src_file_path)"
	ffprobe "$srctarget" > /tmp/ffmpeg.log 2>&1
	time_work_a
	if [ ! -n "$(cat /tmp/ffmpeg.log | grep title)" -a "$(uci get ffmpegtool.@ffmpegtool[0].audio_addtitle)" == "1" ];then
		param_title="-metadata title=$(uci get ffmpegtool.@ffmpegtool[0].src_file_path | cut -d '/' -f$(expr $(uci get ffmpegtool.@ffmpegtool[0].src_file_path | grep -o / | wc -l) + 1) | cut -d '.' -f1)"
	fi
	echo "$srctarget ---- 转换中..." >> /tmp/ffmpeg.log
	if [ "$param_tone" == "" -a "$param_speed" == "" -a "$param_volume" == "" ];then
		if [ "$(uci get ffmpegtool.@ffmpegtool[0].audio_titleisname)" == "1" ];then
			param_title="$(cat /tmp/ffmpeg.log | grep title | awk '{print$3}')"
			ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_rate $param_channel $audios_param $param_copy "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$param_title.$param_format" -y
		else
			ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_rate $param_channel $audios_param $param_copy $param_title "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(uci get ffmpegtool.@ffmpegtool[0].src_file_path | cut -d '/' -f$(expr $(uci get ffmpegtool.@ffmpegtool[0].src_file_path | grep -o / | wc -l) + 1) | cut -d '.' -f1).$param_format" -y
		fi
	else
		if [ "$(uci get ffmpegtool.@ffmpegtool[0].audio_titleisname)" == "1" ];then
			param_title="$(cat /tmp/ffmpeg.log | grep title | awk '{print$3}')"
			ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_rate $param_channel -filter_complex:a $audios_param "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$param_title.$param_format" -y
		else
			ffmpeg $param_starttime $param_endtime -i "$srctarget" $param_rate $param_channel -filter_complex:a $audios_param $param_title "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(uci get ffmpegtool.@ffmpegtool[0].src_file_path | cut -d '/' -f$(expr $(uci get ffmpegtool.@ffmpegtool[0].src_file_path | grep -o / | wc -l) + 1) | cut -d '.' -f1).$param_format" -y
		fi
	fi
	echo "转换完成!" >> /tmp/ffmpeg.log
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "all files in the directory" ];then
	srctarget="$(ls $(uci get ffmpegtool.@ffmpegtool[0].src_directory_path))"
	for i in $srctarget;do
		ffprobe "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" > /tmp/ffmpeg.log 2>&1
		time_work_a
		if [ ! -n "$(cat /tmp/ffmpeg.log | grep title)" -a "$(uci get ffmpegtool.@ffmpegtool[0].audio_addtitle)" == "1" ];then
			param_title="-metadata title="$(echo "$i" | cut -d '.' -f1)""
		fi
		echo "$i ---- 转换中..." >> /tmp/ffmpeg.log
		if [ "$param_tone" == "" -a "$param_speed" == "" -a "$param_volume" == "" ];then
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].audio_titleisname)" == "1" ];then
				ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_rate $param_channel $audios_param $param_copy "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$param_title.$param_format" -y
			else
				ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_rate $param_channel $param_title $audios_param $param_copy "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(echo $i | cut -d '.' -f1).$param_format" -y
			fi
		else
			if [ "$(uci get ffmpegtool.@ffmpegtool[0].audio_titleisname)" == "1" ];then
				param_title="$(cat /tmp/ffmpeg.log | grep title | awk '{print$3}')"
				ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_rate $param_channel -filter_complex:a $audios_param "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$param_title.$param_format" -y
			else
				ffmpeg $param_starttime $param_endtime -i "$(uci get ffmpegtool.@ffmpegtool[0].src_directory_path)/$i" $param_rate $param_channel -filter_complex:a $audios_param $param_title "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(echo $i | cut -d '.' -f1).$param_format" -y
			fi
		fi
		echo "转换完成!" >> /tmp/ffmpeg.log
	done
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "streaming media" ];then
	srctarget="$(uci get ffmpegtool.@ffmpegtool[0].src_stream_path)"
	ffprobe "$srctarget" > /tmp/ffmpeg.log 2>&1
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].dest_select)" == "Sound Card" ];then
		echo "$srctarget ---- 播放中..." >> /tmp/ffmpeg.log
		if [ "$param_tone" == "" -a "$param_speed" == "" -a "$param_volume" == "" ];then
			ffmpeg -i "$srctarget" $param_rate $param_channel $audios_param -f alsa default
		else
			ffmpeg -i "$srctarget" $param_rate $param_channel -filter_complex:a $audios_param -f alsa default
		fi
		echo "播放完毕!" >> /tmp/ffmpeg.log
	else
		echo "$srctarget ---- 导出中..." >> /tmp/ffmpeg.log
		if [ "$param_tone" == "" -a "$param_speed" == "" -a "$param_volume" == "" ];then
			ffmpeg -i "$srctarget" $param_rate $param_channel $audios_param "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(date +%s).$param_format" -y
		else
			ffmpeg -i "$srctarget" $param_rate $param_channel -filter_complex:a $audios_param "$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/$(date +%s).$param_format" -y
		fi
		echo "导出完毕!" >> /tmp/ffmpeg.log
	fi
elif [ "$(uci get ffmpegtool.@ffmpegtool[0].src_select)" == "microphone" ];then
	if [ "$(uci get ffmpegtool.@ffmpegtool[0].dest_select)" == "directory" ];then
		theoutput="$(uci get ffmpegtool.@ffmpegtool[0].dest_directory_path)/output-$(date +%s).wav"
		echo "麦克风录音： 保存到$theoutput... " >> /tmp/ffmpeg.log
		arecord -D default -f cd -c 1 "$theoutput"
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].dest_select)" == "Sound Card" ];then
		echo "麦克风本地边录边放： 进行中... " >> /tmp/ffmpeg.log
		arecord -D default -f cd -c 1 | aplay
	elif [ "$(uci get ffmpegtool.@ffmpegtool[0].dest_select)" == "streaming media server" ];then
		echo "麦克风推流: 进行中... 目标：$(uci get ffmpegtool.@ffmpegtool[0].rtmp_server_url) " >> /tmp/ffmpeg.log
		if [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "rtmp server" ];then
			ffmpeg -f alsa -i default -ar 22050 -ac 1 -f flv "$(uci get ffmpegtool.@ffmpegtool[0].rtmp_server_url)"
		elif [ "$(uci get ffmpegtool.@ffmpegtool[0].streamserver_select)" == "icecast server" ];then
			ffmpeg -f alsa -i default -ar 22050 -ac 1 -vn -f mp3 "$(uci get ffmpegtool.@ffmpegtool[0].icecast_server_url)"
		fi
	fi
fi

ucidefault

